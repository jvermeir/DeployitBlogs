#
# Remove all versions of an application from the repository, except for the ones that are deployed
#

import sys

def usage():
   print "usage: $CLI_HOME/bin/cli.sh -username <username> -password <password> -f cleanup.cli -- <applicationName>"
   print "example: $CLI_HOME/bin/cli.sh -username admin -password admin -f cleanup.cli -- script"

def removeApplicationVersions(applicationVersionIds):
    print "Removing applications: " + str(applicationVersionIds)
    for appId in applicationVersionIds:
        try:
           print "Removing application: " + str(appId)
           app = repository.read(appId)
           repository.delete(app.id)
        except:
           print "Failed to remove application: " + app.id 
    deployit.runGarbageCollector()

def undeployApplication(appName):
    versions = repository.search('udm.DeploymentPackage', 'Environments' + appName )
    try:
        taskID = deployment.undeploy('Environments/localenv/' + appName)
        deployit.startTaskAndWait(taskID)
    except:
        print "undeploy failed, continuing with fingers crossed"

def removeApplication(appName):
    versions = repository.search('udm.DeploymentPackage', 'Applications/' + appName )
    removeApplicationVersions(versions)

if len(sys.argv) < 2:
    usage()
    sys.exit(-1)

appName = sys.argv[1]
print "Removing application versions for application: '" + appName + "'"
removeApplication(appName)